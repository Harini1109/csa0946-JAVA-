import java.util.Scanner;

class Account {
    protected long accountNumber;
    protected String accountHolderName;
    protected double balance;

    public Account(long accountNumber, String accountHolderName, double initialDeposit) {
        this.accountNumber = accountNumber;
        this.accountHolderName = accountHolderName;
        this.balance = initialDeposit;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Transaction successful. New balance: $" + balance);
        } else {
            System.out.println("Invalid amount.");
        }
    }

    public boolean withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            System.out.println("Transaction successful. New balance: $" + balance);
            return true;
        } else {
            System.out.println("Insufficient funds.");
            return false;
        }
    }

    public void displayAccountDetails() {
        System.out.println("Account Number: " + accountNumber + " - " + accountHolderName + " (Balance: $" + balance + ")");
    }
}

class SavingsAccount extends Account {
    private double interestRate;

    public SavingsAccount(long accountNumber, String accountHolderName, double initialDeposit, double interestRate) {
        super(accountNumber, accountHolderName, initialDeposit);
        this.interestRate = interestRate;
    }

    @Override
    public void displayAccountDetails() {
        System.out.println("Savings Account (" + accountNumber + ") - " + accountHolderName +
                " (Balance: $" + balance + ", Interest Rate: " + interestRate + "%)");
    }
}

class CheckingAccount extends Account {
    private double overdraftLimit;

    public CheckingAccount(long accountNumber, String accountHolderName, double initialDeposit, double overdraftLimit) {
        super(accountNumber, accountHolderName, initialDeposit);
        this.overdraftLimit = overdraftLimit;
    }

    @Override
    public boolean withdraw(double amount) {
        if (balance - amount >= -overdraftLimit) {
            balance -= amount;
            if (balance < 0) {
                System.out.println("Transaction successful. New balance: $" + balance + " (overdraft limit reached)");
            } else {
                System.out.println("Transaction successful. New balance: $" + balance);
            }
            return true;
        } else {
            System.out.println("Overdraft limit exceeded.");
            return false;
        }
    }

    @Override
    public void displayAccountDetails() {
        System.out.println("Checking Account (" + accountNumber + ") - " + accountHolderName +
                " (Balance: $" + balance + ", Overdraft Limit: $" + overdraftLimit + ")");
    }
}

public class BankingSystem {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        SavingsAccount savings = new SavingsAccount(123456789L, "Jane Doe", 5000.00, 1.5);
        CheckingAccount checking = new CheckingAccount(987654321L, "John Smith", 1000.00, 1000.00);

        Account[] accounts = {savings, checking};

        System.out.println("The accounts in the system are:");
        for (int i = 0; i < accounts.length; i++) {
            System.out.print((i + 1) + ". ");
            accounts[i].displayAccountDetails();
        }

        while (true) {
            System.out.println("Please enter the number of the account you wish to perform a transaction on: ");
            int accountChoice = sc.nextInt();
            if (accountChoice < 1 || accountChoice > accounts.length) {
                System.out.println("Invalid account choice.");
                continue;
            }

            Account selectedAccount = accounts[accountChoice - 1];

            System.out.println("Please enter the transaction type (deposit/withdraw): ");
            String transactionType = sc.next();

            System.out.println("Please enter the amount: ");
            double amount = sc.nextDouble();

            if (transactionType.equalsIgnoreCase("deposit")) {
                selectedAccount.deposit(amount);
            } else if (transactionType.equalsIgnoreCase("withdraw")) {
                selectedAccount.withdraw(amount);
            } else {
                System.out.println("Invalid transaction type.");
            }
        }
    }
}
